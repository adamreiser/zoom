#!/usr/bin/env ruby

require "optparse"
require "zoom"

class ZoomExit
    GOOD = 0
    INVALID_OPTION = 1
    INVALID_ARGUMENT = 2
    MISSING_ARGUMENT = 3
    EXCEPTION = 4
end

def parse(args)
    options = Hash.new
    options["action"] = "exec"
    options["use"] = nil

    info = "Do you like to search through code using ag, ack, or " \
        "grep? Good! This tool is for you! Zoom adds some " \
        "convenience to ag/ack/grep by allowing you to quickly " \
        "open your search results in your editor of choice. When " \
        "looking at large code-bases, it can be a pain to have to " \
        "scroll to find the filename of each result. Zoom prints a " \
        "tag number in front of each result that ag/ack/grep " \
        "outputs. Then you can quickly open that tag number with " \
        "Zoom to jump straight to the source. Zoom is even " \
        "persistent across all your sessions! You can search in " \
        "one terminal and jump to a tag in another terminal from " \
        "any directory!"

    parser = OptionParser.new do |opts|
        opts.banner =
            "Usage: #{File.basename($0)} [OPTIONS] <pattern>"

        opts.on(
            "-a",
            "--add=NAME",
            "Add a new profile with specified name"
        ) do |name|
            options["action"] = "add"
            options["use"] = name
        end

        opts.on("-c", "--cache", "Show previous results") do
            options["action"] = "cache"
        end

        opts.on(
            "-d",
            "--delete=NAME",
            "Delete profile with specified name"
        ) do |name|
            options["action"] = "delete"
            options["use"] = name
        end

        opts.on(
            "-e",
            "--edit=NAME",
            "Edit profile with specified name"
        ) do |name|
            options["action"] = "edit"
            options["use"] = name
        end

        opts.on(
            "--editor=EDITOR",
            "Use the specified editor"
        ) do |editor|
            options["action"] = "editor"
            options["use"] = editor
        end

        opts.on("--examples", "Show some examples") do
            options["action"] = "examples"
        end

        opts.on("--find", "Use the zoom_find profile") do
            options["use"] = "zoom_find"
        end

        opts.on(
            "-g",
            "--go=NUM",
            "Open editor to search result NUM"
        ) do |go|
            options["action"] = "go"
            options["use"] = go
        end

        opts.on("-h", "--help", "Display this help message") do
            puts opts
            exit ZoomExit::GOOD
        end

        opts.on("-l", "--list", "List profiles") do
            options["action"] = "list_profiles"
        end

        opts.on(
            "--list-profile-names",
            "List profile names for completion functions"
        ) do
            options["action"] = "list_profile_names"
        end

        opts.on(
            "--list-tags",
            "List tags for completion functions"
        ) do
            options["action"] = "list_tags"
        end

        opts.on(
            "--pager",
            "Treat Zoom as a pager (internal use only)"
        ) do
            options["action"] = "pager"
        end

        opts.on("-r", "--repeat", "Repeat the last Zoom command") do
            options["action"] = "repeat"
        end

        opts.on("--rc", "Create default .zoomrc file") do
            options["action"] = "rc"
        end

        opts.on(
            "--rename=NAME",
            "Rename the current profile"
        ) do |name|
            options["action"] = "rename"
            options["rename"] = name
        end

        opts.on(
            "-s",
            "--switch=NAME",
            "Switch to profile with specified name"
        ) do |name|
            options["action"] = "switch"
            options["use"] = name
        end

        opts.on(
            "-u",
            "--use=NAME",
            "Use specified profile one time only"
        ) do |name|
            options["use"] = name
        end

        opts.on("-w", "--which", "Display the current profile") do
            options["action"] = "which"
        end

        opts.on("", info.word_wrap(80))
    end

    begin
        parser.parse!
    rescue OptionParser::InvalidOption => e
        puts e.message
        puts parser
        exit ZoomExit::INVALID_OPTION
    rescue OptionParser::InvalidArgument => e
        puts e.message
        puts parser
        exit ZoomExit::INVALID_ARGUMENT
    rescue OptionParser::MissingArgument => e
        puts e.message
        puts parser
        exit ZoomExit::MISSING_ARGUMENT
    end

    case File.basename($0)
    when "zc"
        options["action"] = "cache"
    when "zf"
        options["use"] = "zoom_find"
    when "zg"
        options["action"] = "go"
        options["use"] = args[0]
    when "zl"
        options["action"] = "list_profiles"
    when "zr"
        options["action"] = "repeat"
    when "z"
        # do nothing, this is the normal usage
    else
        options["use"] = File.basename($0)
    end

    options["pattern"] = args.delete_at(-1)
    options["subargs"] = args.join(" ")
    return options
end

options = parse(ARGV)

begin
    case options["action"]
    when "add"
        Zoom.instance.interactive_add_profile(options["use"])
    when "cache"
        Zoom.instance.shortcut_cache
    when "delete"
        Zoom.instance.delete_profile(options["use"])
    when "edit"
        Zoom.instance.interactive_edit_profile(options["use"])
    when "editor"
        Zoom.instance.configure_editor(options["use"])
    when "examples"
        puts [
            "EXAMPLES:",
            "",
            "Add a profile named test:",
            "    $ z --add test",
            "",
            "Edit a profile named test:",
            "    $ z --edit test",
            "",
            "Execute the current profile:",
            "    $ z PATTERN",
            "",
            "Repeat the previous Zoom command:",
            "    $ z --repeat",
            "",
            "Pass additional flags to the choosen operator:",
            "    $ z -- -A 3 PATTERN",
            "",
            "Open a tag:",
            "    $ z --go 10",
            "",
            "Open multiple tags:",
            "    $ z --go 10,20,30-40"
        ].join("\n")
    when "go"
        Zoom.instance.loop_through_results(options["use"])
    when "list_profiles"
        Zoom.instance.list_profiles
    when "list_profile_names"
        Zoom.instance.list_profile_names
    when "list_tags"
        Zoom.instance.list_tags
    when "pager"
        Zoom.instance.pager
    when "repeat"
        Zoom.instance.repeat
    when "rc"
        Zoom.default
    when "rename"
        Zoom.instance.rename_profile(
            options["rename"],
            options["use"]
        )
    when "switch"
        Zoom.instance.switch_profile(options["use"])
    when "which"
        Zoom.instance.show_current
    else
        # Search and save results
        Zoom.instance.exec_profile(
            options["use"],
            options["subargs"],
            options["pattern"]
        )
    end
rescue Zoom::Error => e
    puts e.message
    exit ZoomExit::EXCEPTION
rescue Exception => e
    puts e.message
    exit ZoomExit::EXCEPTION
end
exit ZoomExit::GOOD
